package it.water.documents.manager.service;

import it.water.core.api.registry.ComponentRegistry;
import it.water.core.interceptors.annotations.FrameworkComponent;
import it.water.core.interceptors.annotations.Inject;
import it.water.core.permission.action.CrudActions;
import it.water.core.permission.annotations.AllowGenericPermissions;
import it.water.documents.manager.api.DocumentApi;
import it.water.documents.manager.api.DocumentSystemApi;
import it.water.documents.manager.model.Document;
import it.water.repository.service.BaseEntityServiceImpl;
import lombok.Getter;
import lombok.Setter;

import java.io.InputStream;


/**
 * @Generated by Water Generator
 * Service Api Class for DocumentsManager entity.
 */
@FrameworkComponent
public class DocumentServiceImpl extends BaseEntityServiceImpl<Document> implements DocumentApi {

    @Inject
    @Getter
    @Setter
    private DocumentSystemApi systemService;

    @Inject
    @Getter
    @Setter
    private ComponentRegistry componentRegistry;

    public DocumentServiceImpl() {
        super(Document.class);
    }

    @AllowGenericPermissions(actions = CrudActions.FIND)
    @Override
    public InputStream fetchDocumentContent(long documentId) {
        return systemService.fetchDocumentContent(documentId);
    }

    @AllowGenericPermissions(actions = CrudActions.FIND)
    @Override
    public InputStream fetchDocumentContentByPath(String path) {
        return systemService.fetchDocumentContentByPath(path);
    }

    @AllowGenericPermissions(actions = CrudActions.FIND)
    @Override
    public InputStream fetchDocumentContentByUID(String documentUID) {
        return systemService.fetchDocumentContentByUID(documentUID);
    }
}
