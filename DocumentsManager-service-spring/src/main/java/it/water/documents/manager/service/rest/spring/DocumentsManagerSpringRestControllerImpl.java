package it.water.documents.manager.service.rest.spring;

import it.water.core.api.model.PaginableResult;
import it.water.core.api.repository.query.Query;
import it.water.core.api.repository.query.QueryOrder;
import it.water.core.model.exceptions.WaterRuntimeException;
import it.water.documents.manager.model.Document;
import it.water.documents.manager.service.rest.DocumentControllerImpl;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.io.InputStream;


/**
 * @Generated by Water Generator
 * Rest Api Class for DocumentsManager entity. It just overrides method invoking super in order to let spring find web methods.
 */
@RestController
public class DocumentsManagerSpringRestControllerImpl extends DocumentControllerImpl implements DocumentsManagerSpringRestApi {

    @Override
    public Document save(Document document, MultipartFile multipartFile) {
        try {
            InputStream inputStream = null;
            if (multipartFile != null) {
                inputStream = multipartFile.getInputStream();
            }
            return save(document, inputStream);
        } catch (IOException e) {
            throw new WaterRuntimeException(e.getMessage(), e);
        }
    }

    @Override
    public Document save(Document entity, InputStream file) {
        return super.save(entity, file);
    }

    @Override
    public Document update(Document document, MultipartFile multipartFile) {
        try {
            InputStream inputStream = null;
            if (multipartFile != null) {
                inputStream = multipartFile.getInputStream();
            }
            return update(document, inputStream);
        } catch (Exception e) {
            throw new WaterRuntimeException(e.getMessage(), e);
        }
    }

    @Override
    @SuppressWarnings("java:S1185") //disabling sonar because spring needs to override this method
    public Document update(Document entity,InputStream file) {
        return super.update(entity);
    }

    @Override
    @SuppressWarnings("java:S1185") //disabling sonar because spring needs to override this method
    public void remove(long id) {
        super.remove(id);
    }

    @Override
    @SuppressWarnings("java:S1185") //disabling sonar because spring needs to override this method
    public Document find(long id) {
        return super.find(id);
    }

    @Override
    @SuppressWarnings("java:S1185") //disabling sonar because spring needs to override this method
    public PaginableResult<Document> findAll(Integer delta, Integer page, Query filter, QueryOrder order) {
        return super.findAll(delta, page, filter, order);
    }

    @Override
    @SuppressWarnings("java:S1185") //disabling sonar because spring needs to override this method
    public PaginableResult<Document> findAll() {
        return super.findAll();
    }

}
